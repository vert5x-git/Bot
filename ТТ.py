# -*- coding: utf8 -*-
import json
import math
import random
import sqlite3
import time
import traceback
from threading import Thread
import requests
from peewee import *
import telebot
from PIL import Image, ImageDraw, ImageFont, ImageEnhance

import os
import sys
folder = "/".join(sys.argv[0].split("/")[:-1]) 
if folder != "":
    folder += "/"

def profitimg(worker,workersum, sum ,service):

    bg = Image.open(f"{folder}profit.jpg").convert('RGBA')
    w, h = bg.size
    draw_text = ImageDraw.Draw(bg)
    w, height = draw_text.textsize(worker, font=ImageFont.truetype(folder + "ttcu.ttf", size=34))
    draw_text.text(((349 - w / 2), 300), worker, font=ImageFont.truetype(folder + "ttcu.ttf", size=34), fill=('#ffffff'))
    w, height = draw_text.textsize(workersum, font=ImageFont.truetype(folder + "ttcu.ttf", size=34))
    draw_text.text(((927 - w / 2), 300), workersum + " RUB", font=ImageFont.truetype(folder + "ttcu.ttf", size=34), fill=('#ffffff'))

    w, height = draw_text.textsize(sum, font=ImageFont.truetype(folder + "ttcu.ttf", size=34))
    draw_text.text(((349 - w / 2), 467), sum + " RUB", font=ImageFont.truetype(folder + "ttcu.ttf", size=34), fill=('#ffffff'))
    w, height = draw_text.textsize(service, font=ImageFont.truetype(folder + "ttcu.ttf", size=34))
    draw_text.text(((927 - w / 2), 467), service, font=ImageFont.truetype(folder + "ttcu.ttf", size=34), fill=('#ffffff'))

    bg.save(f"{folder}lastprofit.png")
    #bg.show()


bot = telebot.TeleBot("2034676702:AAHkjcnQJJuRQWnbK9bNXqSbo6ng2tg-VOQ")
bot2 = telebot.TeleBot("2096151450:AAFYvz-lWW-BwPp1YdXQHnIltko-UJ8kYAY")

print(bot.get_me())
botusername = bot.get_me().username.lower()
botusername2 = bot2.get_me().username.lower()
admins = [1894141145,1991629789,1629870031,1527943081, 514836024]
#admins = [1894141145]
minprofit = 1
rules = "–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º.\n\n" \
"1. –ü–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ò–Ω–≤–µ—Å—Ç–æ—Ä—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏ –∏ –≤—ã–≥–æ–¥—ã, –Ω–∞–ª–æ–≥–æ–≤—ã–µ, —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ, –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏, —Å–≤–æ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç—å —Ç–∞–∫–∏–µ —Ä–∏—Å–∫–∏. –ö–ª–∏–µ–Ω—Ç —Ç–∞–∫–∂–µ –Ω–µ—Å–µ—Ç —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –æ–ø–ª–∞—Ç—É –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö –∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ä–Ω—ã—Ö —É—Å–ª—É–≥\n\n" \
"2. –ü—Ä–∏–Ω–∏–º–∞—è –ø—Ä–∞–≤–∏–ª–∞, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ—ë —Å–æ–≥–ª–∞—Å–∏–µ —Å–æ –≤—Å–µ–º–∏ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏!\n\n" \
"3. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ/–æ–±–º–∞–Ω –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã! –ö–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫—Ä—É–ø–Ω–æ–π —Å—É–º–º—ã —Å—Ä–µ–¥—Å—Ç–≤.\n\n" \
"4. –ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!\n\n" \
"5. –°–∫—Ä–∏–ø—Ç—ã, —Å—Ö–µ–º—ã, —Ç–∞–∫—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ!\n\n" \
"6. –ï—Å–ª–∏ –±—É–¥—É—Ç –≤—ã—è–≤–ª–µ–Ω—ã –≤—ã—à–µ–ø–µ—Ä—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤!\n\n" \
"7. –í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –í–∞—Å –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –í–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å –∏ –í–∞—à–µ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ.\n\n" \
"–í—ã –∏–≥—Ä–∞–µ—Ç–µ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã, –ø–æ–∫—É–ø–∞—è –∏—Ö –∑–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–µ–Ω—å–≥–∏. –õ—é–±–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ–º!  –í—ã–≤–æ–¥ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞, –≤ 5 —Ä–∞–∑ –ø—Ä–µ–≤—ã—à–∞—é—â–µ–≥–æ —Å —Å—É–º–º—É –í–∞—à–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è!–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –í—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –∞ —Ç–∞–∫ –∂–µ –≤–æ–ø—Ä–æ—Å–∞–º –∏–≥—Ä—ã –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫ –±–æ—Ç—É.\n\n" \
"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ, –í–∞—à ¬´MelBet Roulette¬ª"

#db = SqliteDatabase(database = folder + "bot.db")
db = MySQLDatabase("casino", host="localhost", port=3306, user="root", password="casino3462",charset='utf8mb4') #185.23.108.137

class Users(Model):
    id = BigIntegerField(primary_key=True,unique=True)
    username = TextField(default="")
    name = TextField(default="")
    game = TextField(default="")
    balance = FloatField(default=0)
    place = TextField(default="start")
    refer = IntegerField(default=0)
    status = TextField(default="win")
    worker = IntegerField(default=0)
    workerbalance = IntegerField(default=0)
    freezed = IntegerField(default=0)
    ofph = IntegerField(default=0)
    regtime = IntegerField()
    moderator = IntegerField(default=0)
    v1 = TextField(default="")
    v2 = TextField(default="")
    v3 = TextField(default="")
    v4 = TextField(default="")
    sendfrombot = IntegerField(default=0)
    primesum = IntegerField(default=50000)
    shortid = IntegerField()
    confirm = IntegerField(default=0)
    currency = TextField(default="‚ÇΩ")
    class Meta:
        database = db


class Bills(Model):
    id = BigAutoField(primary_key=True,unique=True)
    amount = IntegerField()
    status = IntegerField(default=0)
    time = IntegerField()
    userid = IntegerField()
    refer = IntegerField()
    class Meta:
        database = db

class Newworkers(Model):
    id = BigIntegerField(primary_key=True,unique=True)
    userid = IntegerField()
    username = TextField(default="")
    name = TextField(default="")
    background = TextField(default="")
    hmtime = TextField(default="")
    wfrom = TextField(default="")
    sended = IntegerField()
    checked = IntegerField(default=0)
    approved = IntegerField(default=0)
    class Meta:
        database = db

class Variables(Model):
    id = IntegerField(primary_key=True,unique=True)
    fakenum = BigIntegerField(default=0)
    qiwitoken = TextField(default="")
    qiwi_name = TextField(default="")
    card = TextField(default="")
    botname = TextField(default="")
    workingdays = IntegerField(default=0)
    wdsum = IntegerField(default="")
    playernum = IntegerField(default=0)
    qiwinum = TextField(default=0)
    profitchatid = BigIntegerField(default=0)
    workerchatid = BigIntegerField(default=0)
    fakewdchat = BigIntegerField(default=0)
    manual = TextField(default="")
    support = TextField(default="")
    profitjoin = TextField(default="")
    workerjoin = TextField(default="")
    minprofit = IntegerField(default=0)
    status = TextField(default="C—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–æ–≤")
    teamname = TextField(default="TEAM")
    autocommit = IntegerField(default=0)
    qiwicard = TextField(default="4509 9000 0900 0999")
    class Meta:
        database = db
#db.drop_tables([Variables])#Users
db.create_tables([Users,Bills,Newworkers,Variables])
variables = Variables.get_or_none(Variables.id == 0)

#q = Users.delete().where(Users.id == 514836024)
#print("deleted ",q.execute())


if variables == None:
    print("CREATED")
    Variables.create(id=0)
    variables = Variables.get_or_none(Variables.id == 0)

botjoin = "tg://resolve?domain=" + botusername
o = random.randint(1000,9000)
def onliner():
    while True:
        global o
        r = random.randint(-10, 10)
        o += r
        if o < 1000:
            o += 50
        if o > 9000:
            o -= 50
        time.sleep(20)
thread = Thread(target=onliner, args=())
thread.start()

def usernum():
    while True:
        variables = Variables.get_or_none(Variables.id==0)
        variables.playernum += 1
        variables.save()
        time.sleep(random.randint(60,300)) # +1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∂–¥—ã–µ 60-300 —Å–µ–∫
thread = Thread(target=usernum, args=())
thread.start()

def wdsum():
    while True:
        variables = Variables.get_or_none(Variables.id==0)
        variables.wdsum += random.randint(500,5000)
        variables.save()
        time.sleep(random.randint(300,600))
thread = Thread(target=wdsum, args=())
thread.start()


def stats():
    while True:
        try:
            day = time.time() % (3600 * 24)
            if day > 23 * 3600:
            #if True:
                variables = Variables.get(Variables.id == 0)
                variables.workingdays += 1
                variables.save()
                bbase = Bills.select().execute()
                sum = 0
                dsum = 0
                for b in bbase:
                    sum += b.amount
                    if b.time > time.time()-3600*24:
                        dsum += b.amount
                wr(variables.profitchatid,f"<b>ü•É {variables.teamname} STATS ü•É</b>\n\nüëë –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞: {sum}RUB üëë\nüí∏ –û–±–æ—Ä–æ—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {dsum}RUB üí∏\nü§ë –í–æ—Ä–∫–µ—Ä—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {int(dsum*0.8)}RUB ü§ë")
        except:
            traceback.print_exc()
        time.sleep(3600)
thread = Thread(target=stats, args=())
thread.start()

def checkorders(userid):
    gb = Newworkers.select().where(Newworkers.checked == 0)
    bot2.send_message(userid, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫: " + str(len(gb)) + " —à—Ç")
    for orderbase in gb:
        kb = telebot.types.InlineKeyboardMarkup()
        item1 = telebot.types.InlineKeyboardButton(text="‚úÖ", callback_data='accept' + str(orderbase.id))
        item2 = telebot.types.InlineKeyboardButton(text="‚ùå", callback_data='decline' + str(orderbase.id))
        kb.add(item1, item2)
        bot2.send_message(userid,"‚úÖ –ó–∞—è–≤–∫–∞ " + str(orderbase.id) + "\n–ü—Ä–æ—Ñ–∏–ª—å: @" + orderbase.username + "\n\n–û–ø—ã—Ç: " +orderbase.background + "\n\n–í—Ä–µ–º—è: " + orderbase.hmtime + "\n\n–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª: " + orderbase.wfrom,reply_markup=kb)
        break



def qiwi():
    while True:
        try:
            variables = Variables.get(Variables.id == 0)
            s = requests.Session()
            s.headers['authorization'] = 'Bearer ' + variables.qiwitoken
            parameters = {'rows': 5}
            response = s.get(f'https://edge.qiwi.com/payment-history/v2/persons/{variables.qiwinum}/payments',params=parameters).json()
            #print(response)
            for val in response['data']:
                try:
                    time.sleep(0.2)
                    #print(val)
                    if val["type"] != "IN":
                        continue
                    bid = val['txnId']
                    comment = val['comment']
                    #print(comment)
                    sum = val['sum']['amount']
                    fromcurrency = val['sum']["currency"]
                    if fromcurrency == 643:
                        fromcurrency = "‚ÇΩ"
                        m = minprofit
                    elif fromcurrency == 840:
                        fromcurrency = "$"
                        m = minusd
                    elif fromcurrency == 398:
                        fromcurrency = "KZT"
                        m = minkzt
                    elif fromcurrency == 804:
                        fromcurrency = "UAH"
                        m = minuah
                    elif fromcurrency == 933:
                        fromcurrency = "BYN"
                        m = minbyn
                    billsbase = Bills.get_or_none(Bills.id == bid)
                    if billsbase == None and sum >= variables.minprofit and val["status"] == "SUCCESS":
                        try:
                            print("–ó–ê–ß–ò–°–õ–Ø–Æ")
                            try:
                                int(comment)
                            except:
                                comment = "0"
                            u = "None"
                            try:
                                base = Users.get(Users.id == comment)
                                currency = base.currency
                            except:
                                traceback.print_exc()
                                base = None
                                currency = "‚ÇΩ"
                            try:
                                r = base.refer
                            except:
                                r = 0

                            try:
                                base.balance += sum
                                base.save()
                                bot.send_message(base.id, "üí∏ –ó–∞—á–∏—Å–ª–µ–Ω–æ " + str(round(sum,2)) + base.currency)
                                if True:
                                    id = base.shortid
                                    if base.username != None:
                                        id = "@" + base.username
                                    else:
                                        id = "—Å ID " + str(id)
                                    if base.refer == 0:
                                        u = "None"
                                    else:
                                        rbase = Users.get(Users.id == base.refer)
                                        u = rbase.username
                                        if u == "None":
                                            u = "None"
                                        else:
                                            u = "@" + u
                                        bot.send_message(rbase.id,"üí∏ –í–∞—à –º–∞–º–æ–Ω—Ç " + id + " –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ " + str(round(sum,2)) + base.currency)
                            except:
                                pass

                            kb = telebot.types.InlineKeyboardMarkup()
                            item1 = telebot.types.InlineKeyboardButton(text="–ó–∞–ª–µ—Ç", callback_data='–ó–∞–ª–µ—Ç')
                            item2 = telebot.types.InlineKeyboardButton(text="–¢–ü", callback_data='–¢–ü')
                            kb.add(item1, item2)
                            text = "üî• –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ\nüí∏ –î–æ–ª—è –≤–æ—Ä–∫–µ—Ä–∞: " + str(
                                round(sum * 0.75,2)) + " RUB (-25%)\nüíµ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: " + str(
                                round(sum,2)) +" RUB\nüë§ –í–æ—Ä–∫–µ—Ä: " + u
                            profitimg(u,str(round(sum * 0.75,2)),str(int(sum)),"–ö–∞–∑–∏–Ω–æ")
                            try:
                                wr(variables.profitchatid, text,[["–ó–∞–ª–µ—Ç#–ó–∞–ª–µ—Ç","–¢–ü#–¢–ü"]],"lastprofit.png")
                            except:
                                print("ERROR profitchat")
                            try:
                                wr(variables.workerchatid, text,photo="lastprofit.png")
                            except:
                                print("ERROR workerchat")
                            Bills.create(id=bid, amount=sum, status=1, time=int(time.time()), userid=int(comment), refer=r)
                        except:
                            traceback.print_exc()

                except:
                    traceback.print_exc()
        except:
            pass
        time.sleep(60)
thread = Thread(target=qiwi, args=())
thread.start()

def wr(userid,text,buttons = [],photo = ""):
    if buttons == [] or not "#" in buttons[0][0]:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        for r in buttons:
            if len(r) == 1:
                keyboard.row(r[0])
            elif len(r) == 2:
                keyboard.row(r[0],r[1])
            elif len(r) == 3:
                keyboard.row(r[0],r[1],r[2])
        if buttons == []:
            try:
                bot.send_message(userid,text,disable_web_page_preview=True,parse_mode='html')
            except:
                bot.send_message(userid, text)
        else:
            try:
                bot.send_message(userid, text,reply_markup=keyboard,disable_web_page_preview=True,parse_mode='html')
            except:
                bot.send_message(userid, text,reply_markup=keyboard,disable_web_page_preview=True)
    else:
        kb = telebot.types.InlineKeyboardMarkup()
        for line in buttons:
            if len(line) == 1:
                if "##" in line[0]:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("##")[0], url=line[0].split("##")[1])
                else:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("#")[0], callback_data=line[0].split("#")[1])
                kb.add(button1)
            elif len(line) == 2:
                if "##" in line[0]:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("##")[0], url=line[0].split("##")[1])
                else:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("#")[0], callback_data=line[0].split("#")[1])
                if "##" in line[1]:
                    button2 = telebot.types.InlineKeyboardButton(text=line[1].split("##")[0], url=line[1].split("##")[1])
                else:
                    button2 = telebot.types.InlineKeyboardButton(text=line[1].split("#")[0], callback_data=line[1].split("#")[1])
                kb.add(button1,button2)
            elif len(line) == 3:
                if "##" in line[0]:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("##")[0], url=line[0].split("##")[1])
                else:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("#")[0], callback_data=line[0].split("#")[1])
                if "##" in line[1]:
                    button2 = telebot.types.InlineKeyboardButton(text=line[1].split("##")[0], url=line[1].split("##")[1])
                else:
                    button2 = telebot.types.InlineKeyboardButton(text=line[1].split("#")[0], callback_data=line[1].split("#")[1])
                if "##" in line[2]:
                    button3 = telebot.types.InlineKeyboardButton(text=line[2].split("##")[0], url=line[2].split("##")[1])
                else:
                    button3 = telebot.types.InlineKeyboardButton(text=line[2].split("#")[0], callback_data=line[2].split("#")[1])
                kb.add(button1,button2,button3)
        try:
            if photo != "":
                bphoto = open(folder + photo, "rb")
                bot.send_photo(photo=bphoto, chat_id=userid, caption=text, reply_markup=kb, parse_mode='html')
            else:
                bot.send_message(userid, text, reply_markup=kb, disable_web_page_preview=True, parse_mode='html')
        except:
            traceback.print_exc()
            bot.send_message(userid, text, disable_web_page_preview=True,reply_markup=kb)
def wr2(userid,text,buttons = []):
    print(buttons)
    if buttons == [] or not "#" in buttons[0][0]:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        for r in buttons:
            if len(r) == 1:
                keyboard.row(r[0])
            elif len(r) == 2:
                keyboard.row(r[0],r[1])
            elif len(r) == 3:
                keyboard.row(r[0],r[1],r[2])
        if buttons == []:
            try:
                bot2.send_message(userid,text,disable_web_page_preview=True,parse_mode='html')
            except:
                bot2.send_message(userid, text)
        else:
            try:
                bot2.send_message(userid, text,reply_markup=keyboard,disable_web_page_preview=True,parse_mode='html')
            except:
                bot2.send_message(userid, text,reply_markup=keyboard,disable_web_page_preview=True)
    else:
        kb = telebot.types.InlineKeyboardMarkup()
        for line in buttons:
            if len(line) == 1:
                if "##" in line[0]:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("##")[0], url=line[0].split("##")[1])
                else:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("#")[0], callback_data=line[0].split("#")[1])
                kb.add(button1)
            elif len(line) == 2:
                if "##" in line[0]:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("##")[0], url=line[0].split("##")[1])
                else:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("#")[0], callback_data=line[0].split("#")[1])
                if "##" in line[1]:
                    button2 = telebot.types.InlineKeyboardButton(text=line[1].split("##")[0], url=line[1].split("##")[1])
                else:
                    button2 = telebot.types.InlineKeyboardButton(text=line[1].split("#")[0], callback_data=line[1].split("#")[1])
                kb.add(button1,button2)
            elif len(line) == 3:
                if "##" in line[0]:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("##")[0], url=line[0].split("##")[1])
                else:
                    button1 = telebot.types.InlineKeyboardButton(text=line[0].split("#")[0], callback_data=line[0].split("#")[1])
                if "##" in line[1]:
                  